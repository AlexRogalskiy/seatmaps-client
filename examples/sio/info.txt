// Seats.io

** Initialization **

<div id="chart"></div>

<script src="https://cdn.seats.io/chart.js"></script>
<script>
new seatsio.SeatingChart({
    divId: "chart",
    publicKey: "publicDemoKey",
    event: "smallTheatreEvent2"
}).render();
</script>


** Overview **

CDNStaticFilesUrl: "https://cdn.seats.io/static/version/v186"
CDNUrl: "https://cdn.seats.io"
CHART_ID: 1
DOMElementListener:ƒ ()
Element:ƒ (e)
Embeddable:ƒ ()
SeatingChart:ƒ (e)
SeatingChartConfigValidator:ƒ (e)
SeatingChartDesigner:ƒ (e)
SeatsioDummyStorage:ƒ ()
SeatsioSessionStorage:ƒ (e)
SeatsioStorage:{create:ƒ}
ablySubscribeKey: "hnsCTA.N9m7fg:y3JI9JQ1krTED-b9"
charts:[c.SeatingChart]
dataCollectorUrl: "https://data.seats.io"
destroyCharts:ƒ ()
error:ƒ (e)
getChart:ƒ (e)
iOSScrollSmoothener:ƒ ()
onLoad:ƒ (e)
removeFromArray:ƒ (e,t)
v2Url: "https://api.seats.io"
warn:ƒ (e)



** Object Method Properties & Definitions **

DOMElementListener:
  checkForDimensionChanges: ƒ (e)
  checkForWidthChanges: ƒ (e)
  determineInitialDimensions: ƒ ()
  elementDimensions: ƒ ()
  invokeDimensionsChangedListenerIfNeeded: ƒ ()
  invokePositionInViewportChangedListener: ƒ ()
  invokePositionInViewportChangedListenerIfNeeded: ƒ ()
  listenForChanges: ƒ ()
  onChartRendered: ƒ ()
  onDimensionsChanged: ƒ (e)
  onInitialDimensionsDetermined: ƒ (e)
  onPositionInViewportChanged: ƒ (e)
  onWidthChanged: ƒ (e)
  positionsInViewportAreEqual: ƒ (e,t)
  relistenForChanges: ƒ ()
  resetCurrentDimensions: ƒ ()
  shouldStop: ƒ ()
  start: ƒ ()
  stop: ƒ ()
  viewportSizesAreEqual: ƒ (e,t,i,n)
  withElementFetcher: ƒ (e)


Element:
  (properties)
    horizontalPaddingAndBorder: ƒ (e)
    pixelsToNumber: ƒ (e)
    verticalPaddingAndBorder: ƒ (e)
  (methods)
    getContentHeight: ƒ ()
    getContentWidth: ƒ ()
    getPositionInViewport: ƒ ()


Embeddable:
  container: ƒ ()
  createIframe: ƒ (e)
  createLoadingDiv: ƒ ()
  handleKey: ƒ (e)
  init: ƒ (e)
  removeIframe: ƒ ()
  removeLoadingDiv: ƒ ()
  sendMsgToIframe: ƒ (e)
  validateConfig: ƒ (e)

SeatingChart:
  asyncCallError: ƒ (e)
  asyncCallSuccess: ƒ (e,t)
  asyncRequest: ƒ (e,t,i)
  changeConfig: ƒ (e)
  clearSelection: ƒ (e,t)
  configured: ƒ ()
  createHoldTokenInput: ƒ ()
  createSelectedObjectsInput: ƒ ()
  deselectObjects: ƒ (e)
  deselectSeats: ƒ (e)
  destroy: ƒ ()
  determineFitTo: ƒ ()
  fetchStoredHoldToken: ƒ ()
  findObject: ƒ (e,t,i)
  fitsToWidth: ƒ ()
  fitsToWidthAndHeight: ƒ ()
  formatPrices: ƒ (e)
  hideLoadingDiv: ƒ ()
  highlightObjects: ƒ (e)
  listCategories: ƒ (e)
  messageHandlers: {seatsioLoaded: ƒ, onError: ƒ, configured: ƒ, onChartRendered: ƒ, onChartRerendered: ƒ, …}
  objectDeselected: ƒ (e)
  objectFromJson: ƒ (e)
  objectSelected: ƒ (e)
  objectsFromJson: ƒ (e)
  onError: ƒ (e,t)
  onRenderingFailed: ƒ ()
  positionLoadingDivAbsolutelyToFixContainerDivMinHeightIssueOnIOS: ƒ (e)
  pulse: ƒ (e)
  removeHoldTokenInput: ƒ ()
  removeSelectedObjectsInput: ƒ ()
  render: ƒ ()
  renderChart: ƒ (e,t)
  renderChartInitially: ƒ (e,t)
  rendered: ƒ (e,t)
  rerender: ƒ ()
  rerendered: ƒ (e,t)
  resized: ƒ (e,t)
  selectBestAvailable: ƒ (e)
  selectCategories: ƒ (e)
  selectObjects: ƒ (e)
  selectSeats: ƒ (e)
  sendErrorToDataCollector: ƒ (e,t)
  setHoldToken: ƒ (e)
  setUnavailableCategories: ƒ (e)
  showIframe: ƒ ()
  unhighlightObjects: ƒ (e)
  unpulse: ƒ (e)
  unrender: ƒ ()
  updateSelectedObjectsInputValue: ƒ ()
  uuidOrLabel: ƒ (e)
  validateConfig: ƒ (e)
  zoomToSelectedObjects: ƒ ()

  charts: Array
    0: c.SeatingChart
      chartId: 0
      config: {divId: "chart", regenerateReservationToken: true, reserveOnSelect: true, priceFormatter: ƒ, onObjectSelected: ƒ, …}
      domElementListener: c.DOMElementListener {elementFetcher: ƒ, widthChangedListener: ƒ, dimensionsChangedListener: ƒ, positionInViewportChangedListener: ƒ, lastDimensions: {…}, …}
      errorSentToDataCollector: false
      holdToken: "54ac914d-db9e-4f87-adbc-f068fd89cad6"
      iframe: iframeinitialContainerDimensions: {width: 445, height: 0}
      loadingDiv: div
      renderingStart: Tue Feb 13 2018 14:35:19 GMT-0500 (EST) {}
      requestCallbacks: {}
      requestErrorCallbacks: {}
      requestIdCtr: 0
      reservationToken: "54ac914d-db9e-4f87-adbc-f068fd89cad6"
      selectedObjects: []
      selectedObjectsInput: null
      selectedSeats: []
      state: "RENDERED"
      storage: c.SeatsioSessionStorage {chartId: 0}
